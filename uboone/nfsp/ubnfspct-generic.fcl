// Generic MicroBooNE WC/LS NF+SP+CT+Butcher job
#include "services_microboone.fcl"
#include "database_microboone.fcl"
#include "wcls.fcl"
#include "celltreeub.fcl"

process_name: ubnfspct

services:
{
  TFileService: { fileName: "test1.root" }
  #TimeTracker:   {}
  RandomNumberGenerator: {}
  message:      @local::standard_info
  @table::microboone_services
  UBOpReadoutMap: @local::microboone_opreadoutmap
  PMTGainService: @local::microboone_pmtgain_service
  ElectronicsCalibService: @local::microboone_electronicscalib_service
}

services.DetectorPropertiesService.NumberTimeSamples:            6400
services.DetectorClocksService.InheritClockConfig:                  false
services.DetectorClocksService.TriggerOffsetTPC:                    -0.400e3

services.PMTGainService.PmtGainProvider.UseDB: false
services.ElectronicsCalibService.ElectronicsCalibProvider.UseDB: true


source :{
   module_type: RootInput
   saveMemoryObjectThreshold: 10485760

   #inputCommands: ["drop *", "keep raw::RawDigits_*_*_*"]
   inputCommands: ["drop *", "keep *_*_*_Swizzler"]
}

physics :{
   producers: {
      nfsp : @local::wcls.producers.nfsp
      butcher : @local::wcls.producers.butcher
   }
  
   #filters: {
      #filter: {
      #module_type:      "EventFilter"
      #BadEvents:        [ 0 ]
      #BadRuns:          [ 0 ]
      #EventList:        "numucc_sel2_5E19_1000events.txt"
      #Selection:        1
      #}
   #}
 
   analyzers : {
      Event : @local::celltreeub
   }

   p1 : [
      #filter 
      nfsp
      ,butcher
   ]

   ana : [
      Event
   ]  	

   trigger_paths : [ p1 ]
   
   #o1 : [ WCUB, out1 ]
   o1 : [ out1 ]
   end_paths: [ o1, ana ]
}

outputs:{
   out1: {
      module_type: RootOutput
      fileName: "output.root"
      #SelectEvents: [p1]
      saveMemoryObjectThreshold: 10485760 

      outputCommands :   [
         "keep *_*_*_*",
         "drop *_nfsp_raw_*",
         "drop *_nfsp_threshold_*",
         "drop *_nfsp_wiener_*",
         "drop *_nfsp_gauss_*",
         "drop *_wcNoiseFilter_*_*",
         "drop *_daq_*_*"
      ]

   }
}
